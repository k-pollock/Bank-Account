#BlueJ class context
comment0.params=args
comment0.target=void\ main(java.lang.String[])
comment1.params=b
comment1.target=ATM(BankInterface)
comment1.text=\n\ Constuctor\ for\ the\ ATM\ class\n
comment2.params=
comment2.target=void\ readToFile()
comment2.text=\n\ ReadToFile\ takes\ a\ bank\ object\ of\ accounts\ and\ writes\ \n\ them\ to\ a\ file\ in\ the\ format\n\ "Name"\ "ID"\ "$dollars.cents"\n\ \n\ Precondition\:\ a\ ATM\ object\ has\ been\ created\ &\ the\ \n\ method\ is\ called\ on\ it.\n\ Postcondition\:\ the\ method\ creates\ a\ text\ file\ called\n\ out_accounts\ and\ writes\ the\ sorted\ accounts\ in\ the\ bank.\n
comment3.params=id\ dollars\ cents
comment3.target=void\ withdraw(long,\ int,\ int)
comment3.text=\n\ Helper\ method\ withdraw\ takes\ money\ away\ from\ an\ account\n\ \ **If\ a\ checking\ account,\ method\ throws\ InsufficientFundsException**\n\ \ \n\ \ Precondition\:\ called\ on\ an\ ATM\ object\ and\ recieves\ parameters\n\ \ long,\ int,\ cents\ \n\ \ Postcondition\:\ withdraws\ money\ from\ the\ correct\ account\ and\n\ \ calls\ the\ withdraw\ method\ of\ the\ bank\ class\n
comment4.params=id\ dollars\ cents
comment4.target=void\ deposit(long,\ int,\ int)
comment4.text=\n\ Helper\ method\ withdraw\ takes\ money\ away\ from\ an\ account\n\ \n\ \ Precondition\:\ called\ on\ an\ ATM\ object\ and\ recieves\ parameters\n\ \ long,\ int,\ cents\ \n\ \ Postcondition\:\ calls\ the\ deposit\ method\ of\ the\ bank\ class\ and\n\ \ deposits\ money\ into\ the\ correct\ account.\n
comment5.params=id
comment5.target=java.lang.String\ balance(long)
comment5.text=\n\ Helper\ method\ balance\ returns\ the\ balance\ of\ an\ account\n\ \n\ Precondition\:\ recieves\ a\ parameter\ of\ the\ id\ of\ the\ desired\ account\n\ Postcondition\:\ calls\ the\ search\ method\ in\ bank\ to\ retrieve\ the\ \n\ account\ and\ then\ gets\ the\ balance\ of\ the\ account\ and\ returns\ it.\ \n
comment6.params=id
comment6.target=boolean\ validateId(long)
comment6.text=\n\ Checks\ user\ input\ to\ make\ sure\ that\ a\ valid\ ID\ was\ inputted\n\ \n\ Precondition\:\ an\ ID\ of\ type\ long\ is\ sent\ in\ and\ the\ method\ is\n\ called\ on\ a\ ATM\ object\n\ Postcondition\:retursn\ either\ true\ or\ false\ if\ the\ id\ is\ a\ valid\n\ id\ in\ the\ arraylist\ of\ accounts\n
comment7.params=s
comment7.target=boolean\ validateTrans(java.lang.String)
comment7.text=\n\ Helper\ method\ validate\ transaction\ makes\ sure\ the\ user\ \n\ inputs\ a\ valid\ transaction\n\ \n\ Precondition\:\ a\ transaction\ of\ type\ String\ is\ passed\ as\n\ a\ parameter\ and\ the\ method\ is\ called\ on\ an\ ATM\ object\n\ Postcondition\:\ returns\ true\ if\ the\ transaction\ is\ valid\ or\n\ false\ if\ it\ is\ not\n
comment8.params=s\ id
comment8.target=java.lang.String\ executeTrans(java.lang.String,\ long)
comment8.text=\n\ Helper\ method\ execute\ transaction\ finds\ out\ which\ transaction\ \n\ the\ user\ wants\ to\ complete.\n\ \n\ Precondition\:\ validateTrans\ method\ has\ already\ validated\ that\n\ the\ user\ has\ entered\ a\ valid\ transaction\ and\ method\ is\ called\n\ on\ ATM\ object\n\ Postcondition\:\ returns\ the\ letter\ of\ the\ transaction\ the\ user\ \n\ wants\ to\ complete\ which\ is\ then\ handled\ in\ the\ main\ method.\n
comment9.params=fileName
comment9.target=BankInterface\ readFromFile(java.lang.String)
comment9.text=\n\ readFromFile\:\ reads\ account\ data\ from\ a\ .txt\ file\n\ Precondition\:\ A\ proper\ text\ file\ is\ sent\ in\ as\ a\ parameter\n\ Postcondition\:\ returns\ the\ toString\ of\ the\ new\ bank\ created\ by\ the\ accounts\ \n\ read\ in\ from\ the\ text\ file\ provided.\n
numComments=10
